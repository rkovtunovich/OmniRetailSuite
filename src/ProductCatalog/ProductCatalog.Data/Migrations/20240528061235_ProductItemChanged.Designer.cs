// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductCatalog.Data;

#nullable disable

namespace ProductCatalog.Data.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20240528061235_ProductItemChanged")]
    partial class ProductItemChanged
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("brand_codes");

            modelBuilder.HasSequence<int>("item_codes");

            modelBuilder.HasSequence<int>("item_parent_codes");

            modelBuilder.HasSequence<int>("item_type_codes");

            modelBuilder.Entity("ProductCatalog.Core.Entities.ProductAggregate.ProductBrand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("CodeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("code_number")
                        .HasDefaultValueSql("nextval('\"brand_codes\"')");

                    b.Property<string>("CodePrefix")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("code_prefix");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_brands");

                    b.HasIndex("CodePrefix", "CodeNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_brands_code_prefix_code_number");

                    b.ToTable("brands", (string)null);
                });

            modelBuilder.Entity("ProductCatalog.Core.Entities.ProductAggregate.ProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Barcode")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)")
                        .HasColumnName("barcode");

                    b.Property<int>("CodeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("code_number")
                        .HasDefaultValueSql("nextval('\"item_codes\"')");

                    b.Property<string>("CodePrefix")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("code_prefix");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("parent_id");

                    b.Property<string>("PictureUri")
                        .HasColumnType("text")
                        .HasColumnName("picture_uri");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<Guid?>("ProductBrandId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_brand_id");

                    b.Property<Guid?>("ProductTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_items");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_items_parent_id");

                    b.HasIndex("ProductBrandId")
                        .HasDatabaseName("ix_items_product_brand_id");

                    b.HasIndex("ProductTypeId")
                        .HasDatabaseName("ix_items_product_type_id");

                    b.HasIndex("CodePrefix", "CodeNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_items_code_prefix_code_number");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("ProductCatalog.Core.Entities.ProductAggregate.ProductParent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("CodeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("code_number")
                        .HasDefaultValueSql("nextval('\"item_parent_codes\"')");

                    b.Property<string>("CodePrefix")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("code_prefix");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("parent_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_item_parents");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_item_parents_parent_id");

                    b.HasIndex("CodePrefix", "CodeNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_item_parents_code_prefix_code_number");

                    b.ToTable("item_parents", (string)null);
                });

            modelBuilder.Entity("ProductCatalog.Core.Entities.ProductAggregate.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("CodeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("code_number")
                        .HasDefaultValueSql("nextval('\"item_type_codes\"')");

                    b.Property<string>("CodePrefix")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("code_prefix");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_item_types");

                    b.HasIndex("CodePrefix", "CodeNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_item_types_code_prefix_code_number");

                    b.ToTable("item_types", (string)null);
                });

            modelBuilder.Entity("ProductCatalog.Core.Entities.ProductAggregate.ProductItem", b =>
                {
                    b.HasOne("ProductCatalog.Core.Entities.ProductAggregate.ProductParent", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .HasConstraintName("fk_items_item_parents_parent_id");

                    b.HasOne("ProductCatalog.Core.Entities.ProductAggregate.ProductBrand", "ProductBrand")
                        .WithMany()
                        .HasForeignKey("ProductBrandId")
                        .HasConstraintName("fk_items_brands_product_brand_id");

                    b.HasOne("ProductCatalog.Core.Entities.ProductAggregate.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .HasConstraintName("fk_items_item_types_product_type_id");

                    b.Navigation("Parent");

                    b.Navigation("ProductBrand");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("ProductCatalog.Core.Entities.ProductAggregate.ProductParent", b =>
                {
                    b.HasOne("ProductCatalog.Core.Entities.ProductAggregate.ProductParent", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_item_parents_item_parents_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ProductCatalog.Core.Entities.ProductAggregate.ProductParent", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}

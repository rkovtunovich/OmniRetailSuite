version: '3.4'

services:
  identityapi:
    image: ${DOCKER_REGISTRY-}identity-api
    build:
      context: .
      dockerfile: src/Identity.Api/Dockerfile
    environment:
      Backoffice: "${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5301"
      ConnectionStrings__IdentityApiConnection: "${POSTGRES_IDENTITY_API_CONNECTION_STRING}"
    depends_on:
      - "postgres_db"  
  backoffice:
    image: ${DOCKER_REGISTRY-}backoffice-client
    build:
      context: .
      dockerfile: src/BackOffice/BackOffice.Client/Dockerfile
    environment:
      ApiUrl: "http://catalogapi"
      IdentityUrl: "https://identityapi"
      IdentityUrlExternal: "${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5401"
    depends_on:
      - "catalogapi"
      - "identityapi"
  catalogapi:
    image: ${DOCKER_REGISTRY-}catalog-api
    build:
      context: .
      dockerfile: src/Catalog/Catalog.Api/Dockerfile
    environment:
      ConnectionStrings__CatalogConnection: "${POSTGRES_CATALOG_CONNECTION_STRING}"
      ConnectionStrings__IdentityConnection: "${POSTGRES_IDENTITY_CONNECTION_STRING}" 
      IdentityUrl: "http://identityapi"
    depends_on:
      - "postgres_db"
  postgres_db:
    image: postgres
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - db-data:/var/lib/postgresql/data
volumes:
  db-data: 
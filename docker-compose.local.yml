version: '3.4'

services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafdrop:
    image: obsidiandynamics/kafdrop
    environment:
      KAFKA_BROKERCONNECT: kafka:9092  # Connect to Kafka broker service
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"  # Kafdrop web UI will be available at the root URL
    ports:
      - "9000:9000"  # Kafdrop web UI will be available at http://localhost:9000/

  consul-server:
    image: hashicorp/consul:1.10.0
    container_name: consul-server-dev
    restart: always
    volumes:
     - ./server.json:/consul/config/server.json:ro
    networks:
      - consul
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent"
  consul-client:
    image: hashicorp/consul:1.10.0
    container_name: consul-client-dev
    restart: always
    volumes:
     - ./client.json:/consul/config/client.json:ro
    networks:
      - consul
    command: "agent"

volumes:
  kafka_data:
    driver: local

networks:
  consul:
    driver: bridge   